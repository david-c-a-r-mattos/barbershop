/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package view;

import Controller.ScheduleController;
import javax.swing.JComboBox;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.JTextArea;
import javax.swing.JTextField;

public class Scheduling extends javax.swing.JFrame 
{
    private final ScheduleController controller;
    /**
     *
     */
    public Scheduling() 
    {
        initComponents();
        setLocationRelativeTo(null);
        this.controller = new ScheduleController(this);
        start();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jComboBoxService = new javax.swing.JComboBox<>();
        jComboBoxClient = new javax.swing.JComboBox<>();
        jLabel9 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable = new javax.swing.JTable();
        jTextValue = new javax.swing.JTextField();
        jTextDate = new javax.swing.JTextField();
        jTextTime = new javax.swing.JTextField();
        jTextId = new javax.swing.JTextField();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTextAreaObservation = new javax.swing.JTextArea();
        jLabel2 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel3.setForeground(new java.awt.Color(255, 255, 255));
        jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel3.setText("Serviço");
        getContentPane().add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 90, 70, -1));

        jLabel4.setForeground(new java.awt.Color(255, 255, 255));
        jLabel4.setText("Valor");
        getContentPane().add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 120, -1, -1));

        jLabel5.setForeground(new java.awt.Color(255, 255, 255));
        jLabel5.setText("Hora");
        getContentPane().add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 180, -1, -1));

        jLabel6.setForeground(new java.awt.Color(255, 255, 255));
        jLabel6.setText("ID");
        getContentPane().add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 30, -1, -1));

        jLabel7.setForeground(new java.awt.Color(255, 255, 255));
        jLabel7.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel7.setText("Cliente");
        getContentPane().add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 60, 70, -1));

        jLabel8.setForeground(new java.awt.Color(255, 255, 255));
        jLabel8.setText("Data");
        getContentPane().add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 150, -1, -1));

        jComboBoxService.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jComboBoxServiceItemStateChanged(evt);
            }
        });
        getContentPane().add(jComboBoxService, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 90, 170, -1));

        getContentPane().add(jComboBoxClient, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 60, 170, -1));

        jLabel9.setForeground(new java.awt.Color(255, 255, 255));
        jLabel9.setText("Observação:");
        getContentPane().add(jLabel9, new org.netbeans.lib.awtextra.AbsoluteConstraints(270, 30, -1, -1));

        jButton1.setBackground(new java.awt.Color(0, 204, 51));
        jButton1.setFont(new java.awt.Font("Liberation Sans", 1, 15)); // NOI18N
        jButton1.setForeground(new java.awt.Color(255, 255, 255));
        jButton1.setText("Agendar");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton1, new org.netbeans.lib.awtextra.AbsoluteConstraints(360, 180, 250, -1));

        jTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "Cliente", "Serviço", "Valor", "Data", "Observação"
            }
        ));
        jScrollPane1.setViewportView(jTable);

        getContentPane().add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 210, 580, 140));
        getContentPane().add(jTextValue, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 120, 170, -1));
        getContentPane().add(jTextDate, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 150, 170, -1));
        getContentPane().add(jTextTime, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 180, 170, -1));
        getContentPane().add(jTextId, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 30, 170, -1));

        jTextAreaObservation.setColumns(20);
        jTextAreaObservation.setRows(5);
        jScrollPane2.setViewportView(jTextAreaObservation);

        getContentPane().add(jScrollPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(360, 30, 250, 140));

        jLabel2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/schedule_painel.png"))); // NOI18N
        jLabel2.setText("jLabel2");
        getContentPane().add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 20, 600, -1));

        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/principal_menu.png"))); // NOI18N
        jLabel1.setText("Nome");
        getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 630, 400));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed

        // TODO add your handling code here:
        this.controller.toSchedule();
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jComboBoxServiceItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jComboBoxServiceItemStateChanged
        this.controller.updateValue();
    }//GEN-LAST:event_jComboBoxServiceItemStateChanged


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JComboBox<String> jComboBoxClient;
    private javax.swing.JComboBox<String> jComboBoxService;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable jTable;
    private javax.swing.JTextArea jTextAreaObservation;
    private javax.swing.JTextField jTextDate;
    private javax.swing.JTextField jTextId;
    private javax.swing.JTextField jTextTime;
    private javax.swing.JTextField jTextValue;
    // End of variables declaration//GEN-END:variables

    private void start() 
    {
        
        this.controller.updateTable();
        this.controller.updateClient();
        this.controller.updateService();
        this.controller.updateValue();
    }
    public boolean validateFields() 
    {
        // Validar ID
        if (jTextId.getText().trim().isEmpty()) {
            JOptionPane.showMessageDialog(null, "ID não pode estar vazio", "Erro", JOptionPane.ERROR_MESSAGE);
            return false;
        }
        
        // Validar cliente selecionado
        if (jComboBoxClient.getSelectedItem() == null || jComboBoxClient.getSelectedItem().toString().isEmpty()) {
            JOptionPane.showMessageDialog(null, "Selecione um cliente", "Erro", JOptionPane.ERROR_MESSAGE);
            return false;
        }
        
        // Validar serviço selecionado
        if (jComboBoxService.getSelectedItem() == null || jComboBoxService.getSelectedItem().toString().isEmpty()) {
            JOptionPane.showMessageDialog(null, "Selecione um serviço", "Erro", JOptionPane.ERROR_MESSAGE);
            return false;
        }
        
        // Validar valor
        try {
            double value = Double.parseDouble(jTextValue.getText());
            if (value <= 0) {
                JOptionPane.showMessageDialog(null, "Valor deve ser maior que zero", "Erro", JOptionPane.ERROR_MESSAGE);
                return false;
            }
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(null, "Valor inválido", "Erro", JOptionPane.ERROR_MESSAGE);
            return false;
        }
        
        // Validar data (formato básico)
        if (!jTextDate.getText().matches("\\d{2}/\\d{2}/\\d{4}")) {
            JOptionPane.showMessageDialog(null, "Data no formato inválido (use DD/MM/AAAA)", "Erro", JOptionPane.ERROR_MESSAGE);
            return false;
        }
        
        // Validar hora (formato básico)
        if (!jTextTime.getText().matches("\\d{2}:\\d{2}")) {
            JOptionPane.showMessageDialog(null, "Hora no formato inválido (use HH:MM)", "Erro", JOptionPane.ERROR_MESSAGE);
            return false;
        }
        
        return true;
    }

    public JTable getjTable() 
    {
        return jTable;
    }

    public void setjTable(JTable jTable1) 
    {
        this.jTable = jTable1;
    }

    public JComboBox<String> getjComboBoxClient() {
        return jComboBoxClient;
    }

    public void setjComboBoxClient(JComboBox<String> jComboBoxClient) {
        this.jComboBoxClient = jComboBoxClient;
    }

    public JComboBox<String> getjComboBoxService() {
        return jComboBoxService;
    }

    public void setjComboBoxService(JComboBox<String> jComboBoxService) {
        this.jComboBoxService = jComboBoxService;
    }

    public JTextArea getjTextAreaObservation() {
        return jTextAreaObservation;
    }

    public void setjTextAreaObservation(JTextArea jTextAreaObservation) {
        this.jTextAreaObservation = jTextAreaObservation;
    }

    public JTextField getjTextDate() {
        return jTextDate;
    }

    public void setjTextDate(JTextField jTextDate) {
        this.jTextDate = jTextDate;
    }

    public JTextField getjTextId() {
        return jTextId;
    }

    public void setjTextId(JTextField jTextId) {
        this.jTextId = jTextId;
    }

    public JTextField getjTextTime() {
        return jTextTime;
    }

    public void setjTextTime(JTextField jTextTime) {
        this.jTextTime = jTextTime;
    }

    public JTextField getjTextValue() {
        return jTextValue;
    }

    public void setjTextValue(JTextField jTextValue) {
        this.jTextValue = jTextValue;
    }
    

}
